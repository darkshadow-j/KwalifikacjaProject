/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ekrany;

import hibernate.baza.data.HQL;
import hibernate.baza.data.Osoby;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import kwalifikacjawojskowa.PageManager;
import kwalifikacjawojskowa.raporty.DOCX;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.docx4j.openpackaging.exceptions.Docx4JException;

/**
 *
 * @author Pawe≈Ç
 */
public class WyborKategoriPage extends javax.swing.JFrame {

    /**
     * Creates new form WyborKategoriPage
     */
    public WyborKategoriPage() {
        initComponents();
        radioButtonGroup.add(katA);
        radioButtonGroup.add(katB);
        radioButtonGroup.add(katD);
        radioButtonGroup.add(katE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radioButtonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        katB = new javax.swing.JRadioButton();
        katD = new javax.swing.JRadioButton();
        katE = new javax.swing.JRadioButton();
        katA = new javax.swing.JRadioButton();
        fullZdrowy = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        uzasadnienieAREA = new javax.swing.JTextArea();
        wydrukBT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Kategoria"));

        katB.setText("B");

        katD.setText("D");

        katE.setText("E");

        katA.setSelected(true);
        katA.setText("A");
        katA.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                katAStateChanged(evt);
            }
        });

        fullZdrowy.setText("Full zdrowy");
        fullZdrowy.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                fullZdrowyStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fullZdrowy)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(katA, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(katB, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(katD, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(katE, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(katE, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(katB, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(katD, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(katA, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(fullZdrowy)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        uzasadnienieAREA.setColumns(20);
        uzasadnienieAREA.setRows(5);
        uzasadnienieAREA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                uzasadnienieAREAKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(uzasadnienieAREA);

        wydrukBT.setText("Wydruk");
        wydrukBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wydrukBTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 695, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 85, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(wydrukBT, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(wydrukBT, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void wydrukBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wydrukBTActionPerformed
        DOCX docx = new DOCX();
        if (fullZdrowy.isSelected() && katA.isSelected()) {
            System.out.println("fuLL ZDROWy");
            try {
                docx.WydajKatA();
                
            } catch (IOException ex) {
                Logger.getLogger(WyborKategoriPage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InvalidFormatException ex) {
                Logger.getLogger(WyborKategoriPage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InterruptedException ex) {
                Logger.getLogger(WyborKategoriPage.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.setVisible(false);
            PageManager.OpenSzukajOsobyPage();
        } else if(!fullZdrowy.isSelected() && katA.isSelected()) {
            int n = JOptionPane.showConfirmDialog(
                    null,
                    "Dostarczono wszystkie dokumenty ?",
                    "Dokumenty",
                    JOptionPane.YES_NO_OPTION);

            if (n == JOptionPane.YES_OPTION) {
                System.out.println("TAK");
                ArrayList<String> Uzasadnienie = this.getUzasadnienieAsList();
                try {
                    docx.WydajKATAp(Uzasadnienie, true);
                } catch (IOException ex) {
                    Logger.getLogger(WyborKategoriPage.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InvalidFormatException ex) {
                    Logger.getLogger(WyborKategoriPage.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InterruptedException ex) {
                    Logger.getLogger(WyborKategoriPage.class.getName()).log(Level.SEVERE, null, ex);
                }
                this.setVisible(false);
                PageManager.OpenSzukajOsobyPage();
            } else {
                ArrayList<String> Uzasadnienie = this.getUzasadnienieAsList();
                try {
                    docx.WydajKATAp(Uzasadnienie, false);
                } catch (IOException ex) {
                    Logger.getLogger(WyborKategoriPage.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InvalidFormatException ex) {
                    Logger.getLogger(WyborKategoriPage.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InterruptedException ex) {
                    Logger.getLogger(WyborKategoriPage.class.getName()).log(Level.SEVERE, null, ex);
                }
                this.setVisible(false);
                PageManager.OpenSzukajOsobyPage();
                System.out.println("NIE");
            }
        }

        try {
            if (katB.isSelected()) {
                ArrayList<String> Uzasadnienie = this.getUzasadnienieAsList();
                docx.WydajKATB(Uzasadnienie);
                this.setVisible(false);
                PageManager.OpenSzukajOsobyPage();
            }
        } catch (IOException ex) {
            Logger.getLogger(WyborKategoriPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvalidFormatException ex) {
            Logger.getLogger(WyborKategoriPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(WyborKategoriPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(katE.isSelected()){
             ArrayList<String> Uzasadnienie = this.getUzasadnienieAsList();
            try {
                docx.WydajKatE(Uzasadnienie);
            } catch (IOException ex) {
                Logger.getLogger(WyborKategoriPage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InvalidFormatException ex) {
                Logger.getLogger(WyborKategoriPage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InterruptedException ex) {
                Logger.getLogger(WyborKategoriPage.class.getName()).log(Level.SEVERE, null, ex);
            }
                this.setVisible(false);
                PageManager.OpenSzukajOsobyPage();
        }
        
                
        if(katD.isSelected()){
             ArrayList<String> Uzasadnienie = this.getUzasadnienieAsList();
            try {
                docx.WydajKatD(Uzasadnienie);
            } catch (IOException ex) {
                Logger.getLogger(WyborKategoriPage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InvalidFormatException ex) {
                Logger.getLogger(WyborKategoriPage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InterruptedException ex) {
                Logger.getLogger(WyborKategoriPage.class.getName()).log(Level.SEVERE, null, ex);
            }
                this.setVisible(false);
                PageManager.OpenSzukajOsobyPage();
        }
    }//GEN-LAST:event_wydrukBTActionPerformed

    public ArrayList<String> getUzasadnienieAsList() {
        String s[] = uzasadnienieAREA.getText().split("\\r?\\n");
        ArrayList<String> arrList = new ArrayList<>(Arrays.asList(s));
        return arrList;
    }

    private void uzasadnienieAREAKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uzasadnienieAREAKeyPressed

        char[] paragraf = {167};
        if (evt.getKeyCode() == 10) {
            ArrayList<String> sprawdzParagrafy = getUzasadnienieAsList();
            String wers = sprawdzParagrafy.get(sprawdzParagrafy.size() - 1);
            List<Integer> dane = ZnajdzParagraf(wers);
            System.out.println(wers + " / " + dane);
            if (!wers.contains("-")) {
                if (wers.contains(String.copyValueOf(paragraf))) {
                    HQL hql = new HQL();

                    if (dane.size() == 2) {
                        String testDoWstawienia = hql.getOpis(dane.get(0), dane.get(1));
                        if (testDoWstawienia != null) {
                            String from = wers;
                            int start = uzasadnienieAREA.getText().indexOf(from);
                            if (start >= 0 && from.length() > 0) {
                                uzasadnienieAREA.replaceRange(testDoWstawienia, start, start
                                        + from.length());
                            }

                        } else {
                            JOptionPane.showMessageDialog(this,
                                    "W bazie nie ma takiego czegos",
                                    "ERROR",
                                    JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this,
                                "Wpisz poprawnie paragraf !",
                                "ERROR",
                                JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }
        if (evt.getKeyCode() == 113) {
            uzasadnienieAREA.setText(uzasadnienieAREA.getText() + String.copyValueOf(paragraf));
        }
    }//GEN-LAST:event_uzasadnienieAREAKeyPressed

    private void katAStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_katAStateChanged
        if (katA.isSelected()) {
            fullZdrowy.setVisible(true);
        } else {
            fullZdrowy.setVisible(false);
        }
    }//GEN-LAST:event_katAStateChanged

    private void fullZdrowyStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_fullZdrowyStateChanged
        if (fullZdrowy.isSelected()) {
            uzasadnienieAREA.setEnabled(false);

        } else {
            uzasadnienieAREA.setEnabled(true);
        }
    }//GEN-LAST:event_fullZdrowyStateChanged

    public List<Integer> ZnajdzParagraf(String wers) {
        System.out.println(wers.replaceAll("\\s+", ""));
        String inputString = wers;
        String digitStr = "";
        List<Integer> digits = new ArrayList<Integer>();

        for (int i = 0; i < inputString.length(); i++) {
            if (Character.isDigit(inputString.charAt(i))) {
                digitStr += inputString.charAt(i);
            } else {
                if (!digitStr.isEmpty()) {
                    digits.add(Integer.parseInt(digitStr));
                    digitStr = "";
                }
            }
        }
        if (!digitStr.isEmpty()) {
            digits.add(Integer.parseInt(digitStr));
            digitStr = "";
        }
        return digits;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WyborKategoriPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WyborKategoriPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WyborKategoriPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WyborKategoriPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WyborKategoriPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox fullZdrowy;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton katA;
    private javax.swing.JRadioButton katB;
    private javax.swing.JRadioButton katD;
    private javax.swing.JRadioButton katE;
    private javax.swing.ButtonGroup radioButtonGroup;
    private javax.swing.JTextArea uzasadnienieAREA;
    private javax.swing.JButton wydrukBT;
    // End of variables declaration//GEN-END:variables
}
